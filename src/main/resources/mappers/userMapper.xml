<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.userMapper">
	
	<resultMap id="RM_selectUser" type="Account">
		<result column="아이디"		property="accountId" javaType="string"/>
		<result column="이름"			property="userName" javaType="string"/>
		<result column="연락처"  		property="phone" javaType="string" />
		<result column="이메일"		property="email" javaType="string"/>
		<result column="가입일자"		property="regDate" javaType="string"/>
		<result column="권한이름"		property="grade" javaType="string"/>
		<result column="권한번호"		property="gradeNum" javaType="string" />
		<result column="관리자권한"		property="admin" javaType="string" />
	</resultMap>
	
	
	<resultMap id="RM_selectUserList" type="ExtjsStoreVO">
		<result column="회원수" property="total" javaType="int"/>
		<result column="검색타입" property="searchType" javaType="string"/>
		<result column="검색값" property="searchValue" javaType="string"/>
		<result column="시작" property="start" javaType="int" />
		<result column="끝" property="limit" javaType="int" />
		<collection property="datas" column="{start=시작, limit=끝, searchType=검색타입, searchValue=검색값}" 
					javaType="java.util.ArrayList"
					ofType="Account" 
					select="selectUser" />
	</resultMap>
	
	
	<select id="selectUserList" resultMap="RM_selectUserList" parameterType="map">
		select (
			select count(*) 
			  from [웹].[dbo].[계정]
			) 회원수, #{searchType} 검색타입, #{searchValue} 검색값, #{start} 시작, #{limit} 끝
	</select>
	
	<select id="selectUser" parameterType="hashmap" resultMap="RM_selectUser">
		select 아이디, 이름, 연락처, 이메일, 가입일자, 권한이름, tb3.권한번호, tb4.권한번호 as 관리자권한
		  from (
		  	select row_number() over(order by 가입일자 desc) rownum, *
		  	  from [웹].[dbo].[계정]
		  	  <choose>
		  	  	<when test="searchType != null and searchType == 'accountId'">
		  	  		where 아이디 = #{searchValue}
		  	  	</when>
		  	  	<when test="searchType != null and searchType == 'userName'">
		  	  		where 이름 = #{searchValue}
		  	  	</when>
		  	  	<when test="searchType != null and searchType == 'phone'">
		  	  		where 연락처 = #{searchValue}
		  	  	</when>
		  	  	<when test="searchType != null and searchType == 'email'">
		  	  		where 이메일 = #{searchValue}
		  	  	</when>
		  	  	<otherwise></otherwise>
		  	  </choose>

		  ) tb1
		  left outer join ( select 계정_아이디, 권한번호 from [웹].[dbo].[계정_권한] where 권한번호 != 3 and 권한번호 != 1) tb2 on tb1.아이디 = tb2.계정_아이디
		  left outer join [웹].[dbo].[권한] tb3 on tb3.권한번호 = tb2.권한번호
		  left outer join [웹].[dbo].[계정_권한] tb4 on tb1.아이디 = tb4.계정_아이디 and tb4.권한번호 = 1
		 where rownum between (#{start} + 1) and (#{start} + #{limit})
		 <if test="searchType != null and searchType == 'grade'">
		 and tb3.권한번호 = #{searchValue}
		 </if>
		   
	</select>
	
	<delete id="deleteUserGrade" parameterType="Account">
		delete from [웹].[dbo].[계정_권한] where 계정_아이디 = #{accountId} and 권한번호 != 3 
	</delete>
	
	<insert id="insertUserGrade" parameterType="Account">
		insert into [웹].[dbo].[계정_권한](계정_아이디, 권한번호)
		values(#{accountId}, #{gradeNum})
	</insert>
	
	<select id="selectUserInfo" parameterType="string" resultMap="RM_selectAccount">
		select 아이디 , 비번 ,
		       case t2.권한번호  
		       		when 1 then 'Y'
		       		else 'N' 
		       end  as 관리자
		  from ( select 아이디, 비번
		  		   from [웹].[dbo].[계정]
		  		  where 아이디 = #{accountId}
		       ) t1
	      left outer join [웹].[dbo].[계정_권한] t2
	        on t1.아이디 = t2.계정_아이디 and t2.권한번호 = 1
	</select>
	
	<resultMap id="RM_selectAccount" type="Account">
		<result column="아이디" property="accountId" javaType="string"/>
		<result column="비번" property="password" javaType="string"/>
		<result column="관리자" property="admin" javaType="string"/>
	 	<collection property="authorities" column="아이디" javaType="java.util.ArrayList"
	 				ofType="Authority" select="selectAdminAuthority" />
	</resultMap>
	
	<select id="selectAdminAuthority" parameterType="string" resultType="Authority">
		select 권한이름 as authName, 권한번호 as authNum
		  from [웹].[dbo].[권한]
		 where 권한번호 = 1
	</select>
</mapper>
